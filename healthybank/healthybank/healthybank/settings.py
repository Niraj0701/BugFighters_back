"""
Django settings for healthybank project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f93l2g6-p$o4n^cb1*he32mgpxj$3kcm%o1(kz10_7h!8p%%@d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'corsheaders',
    'rest_framework',
    'business'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'healthybank.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'healthybank.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'healthybank',
        'USER': 'bankuser',
        'PASSWORD': 'healthybank123',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


MSG91_AUTH_KEY = '282926ATay6P6Gz5d14cad3'
MSG91_SENDER = 'WELLMO'
# AKIA52JG2BGTQITCPH72/XGwn266/PhVcHNf+JlJ23fuecDXCSn7m+ZuUl1vG
if 'ENVIRONMENT' in os.environ and os.environ['ENVIRONMENT'] == 'production':
    print("Setting production environment ")
    SECURE_SSL_REDIRECT = True
    CORS_ORIGIN_ALLOW_ALL = False

    CORS_ORIGIN_WHITELIST = (
        'https://web.healthybank.in',
        'https://localhost:8000'
    )
    USE_X_FORWARDED_HOST = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


else:
    print('Setting up local environment')
    CORS_ORIGIN_ALLOW_ALL = True
#
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'filters': {
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse'
#         }
#     },
#     'formatters': {
#         'standard': {
#             'format': '%(asctime)s %(levelname)s [%(name)s: %(lineno)s] -- %(message)s',
#             'datefmt': '%m-%d-%Y %H:%M:%S'
#         },
#     },
#     'handlers': {
#         'logfile': {
#             'level': 'DEBUG',
#             'filters': None,
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'logs/logfile.log',
#             'maxBytes': 1024 * 1024 * 5,
#             'backupCount': 3,
#             'formatter': 'standard'
#         },
#         'debug_logfile': {
#             'level': 'DEBUG',
#             'filters': None,
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'logs/debug_logfile.log',
#             'maxBytes': 1024 * 1024 * 5,
#             'backupCount': 5,
#             'formatter': 'standard'
#         },
#         'default_logger': {
#             'level': 'DEBUG',
#             'filters': None,
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': 'logs/default.log',
#             'maxBytes': 1024 * 1024 * 5,
#             'backupCount': 2,
#             'formatter': 'standard'
#         },
#         # 'celery_logger': {
#         #     'level': 'DEBUG',
#         #     'filters': None,
#         #     'class': 'logging.handlers.RotatingFileHandler',
#         #     'filename': 'logs/celery.log',
#         #     'maxBytes': 1024 * 1024 * 5,
#         #     'backupCount': 2,
#         #     'formatter': 'standard'
#         # },
#         # 'celery_task_logger': {
#         #     'level': 'DEBUG',
#         #     'filters': None,
#         #     'class': 'logging.handlers.RotatingFileHandler',
#         #     'filename': 'logs/celery_tasks.log',
#         #     'maxBytes': 1024 * 1024 * 5,
#         #     'backupCount': 2,
#         #     'formatter': 'standard'
#         # },
#         'console': {
#             'level': 'DEBUG',
#             'filters': None,
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard'
#         }
#
#     },
#     'loggers': {
#         '': {
#             'handlers': ['default_logger','console'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'django': {
#             'handlers': ['logfile', 'console'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'feedmanager': {
#             'handlers': ['logfile', 'debug_logfile'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'recipemanager': {
#             'handlers': ['logfile', 'debug_logfile'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'menumanager': {
#             'handlers': ['logfile', 'debug_logfile'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         # 'celery.task': {
#         #     'handlers': ['celery_task_logger'],
#         #     'level': 'DEBUG',
#         #     'propagate': True,
#         # },
#         # 'celery': {
#         #     'handlers': ['celery_logger'],
#         #     'level': 'DEBUG',
#         #     'propagate': True,
#         # },
#
#     }
# }